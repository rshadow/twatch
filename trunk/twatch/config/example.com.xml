<?xml version='1.0' standalone='yes'?>
<!--
This project file example for torrent tracker LostFilm.tv
Just copy this file in project directory (default: ~/.twatch/project) and
change parameters as you wish.

This file can be base for write new own project files. See more about parameters
in manual ($man twatch).

XML! If parameter value cosist ">" or "<" warp them as in example:
<![CDATA[you_value]]>.
-->
<project>

    <!-- Common project parameters -->

    <!--  Project name. Required. -->
    <name>LostFilm</name>
    <!-- Main page. Required. -->
    <url>http://lostfilm.tv</url>
    <!-- Sort index. Any digits or characters. -->
    <order>0</order>

    <!-- Authtarization parameters -->
    <authtorization>
        <!--
            Url authtorization page (contain authtorization form).
            If match with project url you can miss it
        ->
        <url></url>
        <!--
            Parameters name and value for login on tracker.
            Required:
                login       - user login
                password    - user password
            You can add new own parameters but, as a rule, this not need.
            Programm send really form from tracker with all parameters in
            authtorization form.
        -->
        <login>
            <!-- Login parameter name in authtorization form. -->
            <name>FormLogin</name>
            <!-- Login. -->
            <value>test_login</value>
        </login>
        <password>
            <!-- Password parameter name in authtorization form. -->
            <name>FormPassword</name>
            <!-- Password. -->
            <value>123456</value>
        </password>
    </authtorization>

    <!-- Tasks parameters -->
    <watches>
        <watch>
            <!-- Name. -->
            <name>House M.D.</name>
            <!-- Url for page with torrent list. -->
            <url>http://www.lostfilm.tv/browse.php?cat=51</url>
            <!--
                Regular expression for search pages with torrents.
                Typically use if previos parameter <url> contain list of urls
                with pages wich description torrent.
            -->
            <urlreg></urlreg>
            <!-- Sort index. Any digits or characters. -->
            <order>0</order>
            <!--
               List of user make parameters with regular expressions for
               extraction them from html page.
               Optional (if not specified try find link on *.torrent):
                    torrent     - torrent file name
                    link        - link to download this torrent file
               Reserved:
                    datetime    - reserved: download data
               All rested parameters not required. You can define them and
               use for filters and additional information in email.
               This is example of parameters list.
            -->
            <reg>
                <torrent><![CDATA[<a href=".*?/(House\.M\.D.*?\.torrent)"[^>]*?class="a_download"]]></torrent>
                <link><![CDATA[<a href="([^<]*?House\.M\.D.*?)"[^>]*?class="a_download"]]></link>
                <title><![CDATA[<td class="t_episode_title".*?>(.*?)\s*<]]></title>
                <season><![CDATA[<a href=".*?House\.M\.D\.s?(\d*?)\D.*?" class="a_download"]]></season>
                <series><![CDATA[<a href=".*?House\.M\.D\.s?\d*?\D(\d*?)\D.*?" class="a_download"]]></series>
                <rating><![CDATA[<td class="t_episode_rating".*?<b>(.*?)</b>.*?/td>]]></rating>
                <video><![CDATA[<td class="t_cell">.*?Видео:\s*(.*?);.*?</td>]]></video>
                <translate><![CDATA[<td class="t_cell">.*?Перевод:\s*(.*?);.*?</td>]]></translate>
                <size><![CDATA[<td class="t_cell">.*?Размер:\s*(.*?);.*?</td>]]></size>
            </reg>
            <!--
                List of filters for section <reg>.
                Parameters:
                    name    - parameter name from <reg>
                    value   - filter value
                    method  - filter method:
                              =~, !~, ==, >, >=, <, <=, !=, <=>, eq, gt, lt, ne,
                              ... and all over logical perl operators.
                Filters for this task unoun by logical AND.
                Example below: download all series in 6 season and great.
            -->
            <filters>
                <filter>
                    <name>season</name>
                    <value>6</value>
                    <method>>=</method>
                </filter>
            </filters>
        </watch>
    </watches>
</project>